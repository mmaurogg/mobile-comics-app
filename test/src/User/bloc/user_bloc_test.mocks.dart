// Mocks generated by Mockito 5.3.2 from annotations
// in comic_app/test/src/User/bloc/user_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:ui' as _i7;

import 'package:comic_app/src/Comic/model/comic.dart' as _i6;
import 'package:comic_app/src/User/bloc/bloc_user.dart' as _i3;
import 'package:comic_app/src/User/model/user.dart' as _i5;
import 'package:firebase_auth/firebase_auth.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserCredential_0 extends _i1.SmartFake
    implements _i2.UserCredential {
  _FakeUserCredential_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserBloc extends _i1.Mock implements _i3.UserBloc {
  MockUserBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Stream<_i2.User?> get streeamFirebase => (super.noSuchMethod(
        Invocation.getter(#streeamFirebase),
        returnValue: _i4.Stream<_i2.User?>.empty(),
      ) as _i4.Stream<_i2.User?>);
  @override
  set streeamFirebase(_i4.Stream<_i2.User?>? _streeamFirebase) =>
      super.noSuchMethod(
        Invocation.setter(
          #streeamFirebase,
          _streeamFirebase,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get idUserActivate => (super.noSuchMethod(
        Invocation.getter(#idUserActivate),
        returnValue: '',
      ) as String);
  @override
  set idUserActivate(String? _idUserActivate) => super.noSuchMethod(
        Invocation.setter(
          #idUserActivate,
          _idUserActivate,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set userActive(_i5.UserModel? _userActive) => super.noSuchMethod(
        Invocation.setter(
          #userActive,
          _userActive,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Stream<_i2.User?> get authStatus => (super.noSuchMethod(
        Invocation.getter(#authStatus),
        returnValue: _i4.Stream<_i2.User?>.empty(),
      ) as _i4.Stream<_i2.User?>);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i4.Future<_i2.UserCredential> signIn() => (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [],
        ),
        returnValue: _i4.Future<_i2.UserCredential>.value(_FakeUserCredential_0(
          this,
          Invocation.method(
            #signIn,
            [],
          ),
        )),
      ) as _i4.Future<_i2.UserCredential>);
  @override
  dynamic updateUserData(_i5.UserModel? user) =>
      super.noSuchMethod(Invocation.method(
        #updateUserData,
        [user],
      ));
  @override
  dynamic addFavorite(_i6.ComicModel? comic) =>
      super.noSuchMethod(Invocation.method(
        #addFavorite,
        [comic],
      ));
  @override
  dynamic deleteFavorite(String? idComic) =>
      super.noSuchMethod(Invocation.method(
        #deleteFavorite,
        [idComic],
      ));
  @override
  dynamic getUserData(String? uid) => super.noSuchMethod(Invocation.method(
        #getUserData,
        [uid],
      ));
  @override
  void addListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
